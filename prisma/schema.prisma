generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id                 Int           @id @default(autoincrement())
  title              String?       @db.VarChar(255)
  description        String?       @db.Text
  category           String?       @db.VarChar(255)
  price              Float?        @db.Float
  discountPercentage Float?        @db.Float
  rating             Float?        @db.Float
  stock              Int?
  tags               String?       @db.VarChar(255)
  brand              String?       @db.VarChar(255)
  sku                String?       @db.VarChar(255)
  weight             Float?        @db.Float
  width              Float?        @db.Float
  height             Float?        @db.Float
  depth              Float?        @db.Float
  createdAt          DateTime      @db.DateTime(0)
  updatedAt          DateTime      @db.DateTime(0)
  pointofsales       PointOfSale[]
  // pointOfSaleLinks   PointOfSaleProduct[] @relation("ProductToPointOfSale")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String?   @db.VarChar(255)
  lastName  String?   @db.VarChar(255)
  phoneNo   String?   @unique @db.VarChar(255)
  password  String?   @db.VarChar(255)
  status    Int?
  createdAt DateTime? @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  roleId     Int?     @unique
  role       Role?     @relation(fields: [roleId], references: [id])
  pettycashes PettyCash[]
}

model Role {
  id          Int       @id @default(autoincrement())
  description String?   @db.VarChar(255)
  status      Int?
  createdAt   DateTime? @db.DateTime(0)
  updatedAt   DateTime? @db.DateTime(0)
  user        User?
  permissions Permission[]
  @@map("roles")
}

model Permission {
  id          Int       @id @default(autoincrement())
  description String?   @db.VarChar(255)
  status      Int?
  createdAt   DateTime? @db.DateTime(0)
  updatedAt   DateTime? @db.DateTime(0)
  roles Role[]
  @@map("permissions")
}


model PettyCash {
  id        Int       @id @default(autoincrement())
  userId    Int
  descript  String?   @db.VarChar(255)
  status    Int?
  createdAt DateTime? @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  user      User      @relation(fields: [userId], references: [id])

  @@map("pettycashes")
}

model PointOfSale {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(255)
  address   String?   @db.VarChar(255)
  abc       String?   @db.VarChar(255)
  phone     String?   @db.VarChar(255)
  email     String?   @db.VarChar(255)
  createdAt DateTime? @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)
  products  Product[]
  // productLinks PointOfSaleProduct[] @relation("PointOfSaleToProduct")

  @@map("pointofsales")
}

// model PointOfSaleProduct {
//   id            Int      @id @default(autoincrement())
//   pointOfSaleId Int
//   productId     Int
//   createdAt     DateTime @default(now())
//   updatedAt     DateTime @updatedAt

//   pointOfSale PointOfSale @relation("PointOfSaleToProduct", fields: [pointOfSaleId], references: [id])
//   product     Product     @relation("ProductToPointOfSale", fields: [productId], references: [id])
// }
